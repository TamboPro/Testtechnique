<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProduitAPI</name>
    </assembly>
    <members>
        <member name="M:ProduitAPI.Controllers.CategoriesController.GetCategories">
            <summary>
            Récupération de toutes les catégorie
            </summary>
            <returns> Liste des catégorie</returns>
            <response code="200">Succès</response>
        </member>
        <member name="M:ProduitAPI.Controllers.CategoriesController.GetCategorie(System.Guid)">
            <summary>
            Récupération d'une catégorie dont l'id est passé en paramètre
            </summary>
            <param name="id">id de la catégorie à récupérer</param>
            <returns>Retourne la catégorie demandé</returns>
            <response code="200">Succès</response>
            <response code="404">catégorie non trouvée</response>
        </member>
        <member name="M:ProduitAPI.Controllers.CategoriesController.PutCategorie(System.Guid,ProduitAPI.Models.Categorie)">
            <summary>
            Mise à jour de la catégorie
            </summary>
            <param name="id">id de la catégorie à mettre à jour</param>
            <param name="catégorie">Nouvelles informations de la catégorie</param>
            <returns></returns>
            <response code="204">catégorie mis à jour</response>
            <response code="400">id différent de l'id de la catégorie envoyée</response>
            <response code="404">La catégorie n'existe pas</response>
        </member>
        <member name="M:ProduitAPI.Controllers.CategoriesController.PostCategorie(ProduitAPI.Models.Categorie)">
            <summary>
            Création d'une catégorie
            </summary>
            <param name="catégorie">catégorie à créer</param>
            <returns>Retourne la catégorie créée</returns>
            <response code="201">La catégorie a été créée</response>
            <response code="409">La catégorie existe déjà</response>
        </member>
        <member name="M:ProduitAPI.Controllers.CategoriesController.DeleteCategorie(System.Guid)">
            <summary>
            Suppression de la catégorie
            </summary>
            <param name="id">id de la catégorie à supprimer</param>
            <returns>Retourne la catégorie supprimé</returns>
            <response code="200">La catégorie a été supprimé</response>
            <response code="404">La catégorie n'existe pas</response>
        </member>
        <member name="M:ProduitAPI.Controllers.ClientsController.GetClients">
            <summary>
            Récupération de tous les clients
            </summary>
            <returns> Liste des clients triés par Nom et Prénom </returns>
            <response code="200">Succès</response>
        </member>
        <member name="M:ProduitAPI.Controllers.ClientsController.GetClient(System.Guid)">
            <summary>
            Récupération d'un client dont l'id est passé en paramètre
            </summary>
            <param name="id">id du client à récupérer</param>
            <returns>Retourne le client demandé</returns>
            <response code="200">Succès</response>
            <response code="404">client non trouvé</response>
        </member>
        <member name="M:ProduitAPI.Controllers.ClientsController.PutClient(System.Guid,ProduitAPI.Models.Client)">
            <summary>
            Mise à jour d'un client
            </summary>
            <param name="id">id du client à mettre à jour</param>
            <param name="client">Nouvelles informations du client</param>
            <returns></returns>
            <response code="204">client mis à jour</response>
            <response code="400">id différent du code du client envoyé</response>
            <response code="404">Le client n'existe pas</response>
        </member>
        <member name="M:ProduitAPI.Controllers.ClientsController.PostClient(ProduitAPI.Models.Client)">
            <summary>
            Création d'un client
            </summary>
            <param name="diplomes">client à créer</param>
            <returns>Retourne le client créé</returns>
            <response code="201">Le client a été créé</response>
            <response code="409">Le client existe déjà</response>
        </member>
        <member name="M:ProduitAPI.Controllers.ClientsController.DeleteClient(System.Guid)">
            <summary>
            Suppression d'un client
            </summary>
            <param name="id">id du client à supprimer</param>
            <returns>Retourne le client supprimé</returns>
            <response code="200">Le client a été supprimé</response>
            <response code="404">Le client n'existe pas</response>
        </member>
        <member name="M:ProduitAPI.Controllers.HotelsController.GetHotels">
            <summary>
            Récupération de tous les hôtels
            </summary>
            <returns> Liste des hôtels</returns>
            <response code="200">Succès</response>
        </member>
        <member name="M:ProduitAPI.Controllers.HotelsController.GetHotel(System.Guid)">
            <summary>
            Récupération d'un hôtel dont l'id est passé en paramètre
            </summary>
            <param name="id">id de l'hôtel à récupérer</param>
            <returns>Retourne l'hôtel demandé</returns>
            <response code="200">Succès</response>
            <response code="404">hôtel non trouvé</response>
        </member>
        <member name="M:ProduitAPI.Controllers.HotelsController.PutHotel(System.Guid,ProduitAPI.Models.Hotel)">
            <summary>
            Mise à jour de l'hôtel
            </summary>
            <param name="id">id de l'hôtel à mettre à jour</param>
            <param name="hôtel">Nouvelles informations de l"hôtel</param>
            <returns></returns>
            <response code="204">hôtel mis à jour</response>
            <response code="400">id différent de l'id de l'hôtel envoyé</response>
            <response code="404">L'hôtel n'existe pas</response>
        </member>
        <member name="M:ProduitAPI.Controllers.HotelsController.PostHotel(ProduitAPI.Models.Hotel)">
            <summary>
            Création d'un hôtel
            </summary>
            <param name="hôtel">hôtel à créer</param>
            <returns>Retourne l'hôtel créé</returns>
            <response code="201">L'hôtel a été créée</response>
            <response code="409">L'hôtel existe déjà</response>
        </member>
        <member name="M:ProduitAPI.Controllers.HotelsController.DeleteHotel(System.Guid)">
            <summary>
            Suppression de l'hôtel
            </summary>
            <param name="id">id de l'hôtel à supprimer</param>
            <returns>Retourne l'hôtel supprimé</returns>
            <response code="200">L'hôtel a été supprimé</response>
            <response code="404">L'hôtel n'existe pas</response>
        </member>
        <member name="M:ProduitAPI.Controllers.LignesController.GetLignes">
            <summary>
            Récupération de toutes les lignes
            </summary>
            <returns> Liste des lignes</returns>
            <response code="200">Succès</response>
        </member>
        <member name="M:ProduitAPI.Controllers.LignesController.GetLigne(System.Guid)">
            <summary>
            Récupération d'une ligne dont l'id est passé en paramètre
            </summary>
            <param name="id">id de la ligne à récupérer</param>
            <returns>Retourne la ligne demandée</returns>
            <response code="200">Succès</response>
            <response code="404">ligne non trouvée</response>
        </member>
        <member name="M:ProduitAPI.Controllers.LignesController.PutLigne(System.Guid,ProduitAPI.Models.Ligne)">
            <summary>
            Mise à jour de la ligne
            </summary>
            <param name="id">id de la ligne à mettre à jour</param>
            <param name="ligne">Nouvelles informations de l"ligne</param>
            <returns></returns>
            <response code="204">ligne mise à jour</response>
            <response code="400">id différent de l'id de la ligne envoyé</response>
            <response code="404">la ligne n'existe pas</response>
        </member>
        <member name="M:ProduitAPI.Controllers.LignesController.PostLigne(ProduitAPI.Models.Ligne)">
            <summary>
            Création d'une ligne
            </summary>
            <param name="ligne">ligne à créer</param>
            <returns>Retourne la ligne créée</returns>
            <response code="201">La ligne a été créée</response>
            <response code="409">La ligne existe déjà</response>
        </member>
        <member name="M:ProduitAPI.Controllers.LignesController.DeleteLigne(System.Guid)">
            <summary>
            Suppression de la ligne
            </summary>
            <param name="id">id de la ligne à supprimer</param>
            <returns>Retourne la ligne supprimée</returns>
            <response code="200">la ligne a été supprimée</response>
            <response code="404">la ligne n'existe pas</response>
        </member>
        <member name="M:ProduitAPI.Controllers.ProduitsController.GetProduits">
            <summary>
            Récupération de tous les produits
            </summary>
            <returns> Liste des produits</returns>
            <response code="200">Succès</response>
        </member>
        <member name="M:ProduitAPI.Controllers.ProduitsController.GetProduit(System.Guid)">
            <summary>
            Récupération d'un produit dont l'id est passé en paramètre
            </summary>
            <param name="id">id du produit à récupérer</param>
            <returns>Retourne le produit demandé</returns>
            <response code="200">Succès</response>
            <response code="404">produit non trouvé</response>
        </member>
        <member name="M:ProduitAPI.Controllers.ProduitsController.PutProduit(System.Guid,ProduitAPI.Models.Produit)">
            <summary>
            Mise à jour du produit
            </summary>
            <param name="id">id du produit à mettre à jour</param>
            <param name="produit">Nouvelles informations du produit</param>
            <returns></returns>
            <response code="204">produit mise à jour</response>
            <response code="400">id différent de l'id du produit envoyé</response>
            <response code="404">la produit n'existe pas</response>
        </member>
        <member name="M:ProduitAPI.Controllers.ProduitsController.PostProduit(ProduitAPI.Models.Produit)">
            <summary>
            Création d'un produit
            </summary>
            <param name="produit">produit à créer</param>
            <returns>Retourne le produit créé</returns>
            <response code="201">Le produit a été créé</response>
            <response code="409">Le produit existe déjà</response>
        </member>
        <member name="M:ProduitAPI.Controllers.ProduitsController.DeleteProduit(System.Guid)">
            <summary>
            Suppression du produit
            </summary>
            <param name="id">id du produit à supprimer</param>
            <returns>Retourne le produit supprimé</returns>
            <response code="200">le produit a été supprimé</response>
            <response code="404">le produit n'existe pas</response>
        </member>
        <member name="M:ProduitAPI.Controllers.ReservationsController.GetReservations">
            <summary>
            Récupération de toutes les Reservations
            </summary>
            <returns> Liste des produits</returns>
            <response code="200">Succès</response>
        </member>
        <member name="M:ProduitAPI.Controllers.ReservationsController.GetReservation(System.Guid)">
            <summary>
            Récupération d'une Reservation dont l'id est passé en paramètre
            </summary>
            <param name="id">id de la Reservation à récupérer</param>
            <returns>Retourne la Reservation demandée</returns>
            <response code="200">Succès</response>
            <response code="404">Reservation non trouvée</response>
        </member>
        <member name="M:ProduitAPI.Controllers.ReservationsController.PutReservation(System.Guid,ProduitAPI.Models.Reservation)">
            <summary>
            Mise à jour de la Reservation
            </summary>
            <param name="id">id de la Reservation à mettre à jour</param>
            <param name="Reservation">Nouvelles informations sur la Reservation</param>
            <returns></returns>
            <response code="204">Reservation mise à jour</response>
            <response code="400">id différent de la Reservation envoyée</response>
            <response code="404">la Reservation n'existe pas</response>
        </member>
        <member name="M:ProduitAPI.Controllers.ReservationsController.PostReservation(ProduitAPI.Models.Reservation)">
            <summary>
            Création d'une Reservation
            </summary>
            <param name="Reservation">Reservation à créer</param>
            <returns>Retourne la Reservation créée</returns>
            <response code="201">La Reservation a été créé</response>
            <response code="409">La Reservation existe déjà</response>
        </member>
        <member name="M:ProduitAPI.Controllers.ReservationsController.DeleteReservation(System.Guid)">
            <summary>
            Suppression de la Reservation
            </summary>
            <param name="id">id de la Reservation à supprimer</param>
            <returns>Retourne la Reservation supprimé</returns>
            <response code="200">la Reservation a été supprimé</response>
            <response code="404">la Reservation n'existe pas</response>
        </member>
        <member name="T:ProduitAPI.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:ProduitAPI.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProduitAPI.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProduitAPI.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
